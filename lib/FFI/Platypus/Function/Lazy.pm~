package FFI::Platypus::Function::Lazy;
use parent -norequire, 'FFI::Platypus::Function';

sub new
{
  my($class, $ffi, $address, ...) = @_;
  my $self = bless {}, $class;

  $self->{ffi} = $ffi;
  $self->{address} = $address;
}

sub realize
{
  my($self) = @_;

  return $self->{base} if $self->{realized};

  $self->{base} = $self->{ffi}->new_function($self->{address}, ...);
  $self->{realized} = 1;

  return $self->{base};
}

sub call
{
  my($self, @args) = @_;
  my $base = $self->{base};

  $self->realize->call(@args);
}

sub attach
{
  my($self, $ffi, ...) = @_;

  }
